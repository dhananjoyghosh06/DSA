//Upcoming practices 

1. Merge k sorted linked list
2. Delete Nodes From Linked List Present in Array //Leetcode 3217
3. Linked List in Binary Tree //Leetcode 1367
4. Split Linked List in Parts // Leetcode 725
5. Smallest range from k sorted List
6.

//Problems 

1. Implementation op Singly Linked List // @Day53
2. Insert Greatest Common Divisors in Linked List //@Day53 
3. Write a program to reverse a Linked List //@Day54
4. Reverse a linked list in a group of given size // @Day54
5. Write a program to detect loop in a linked list. //@Day56
7. Write a program to delete a loop in a linked list. //Day56
8. Remove duplicates in a sorted Linked list. //@Day56
10. Write a program to move the last element to front in a linked list.
11. Add "1" to a number represented by linked list.
12. Add two numbers represented by linked lists. //@Day57
13. Intersection of two sorted linked list
14. Intersection point of two linked list.
15. Merge sort in linked list // @Day58
16. Quick sort in linked list
17. Find the middle element of a linked list ///@Day54
18. Check if a linkedlist is a circular linked list //@Day56
19. Split a circular linked list into two halves
20. Check a singly linkedlist is a palindrome or not ? //@Day57
21. Deletion from a circular linked list //@Day55 or //@Day56
22. Reverse a doubly linkedlist //@Day56
23. Find pairs with a given sum in a DLL //
24. count triplets in a sorted DLL whose sum is equal to given value 'X'
25. sort a k sorted Doubly linkedlist
26. Rotate k nodes of a doubly linkedlist
27. Rotate a Doubly linkedlist in group of given size. 
28. Can we reverse the linked in less than O(n) 
29. Why quick sort is preffered for Arrays and Merge sort for linkedlist
30. Flatten a linkedlist 
31. Sort a LL of '0's , '1's, '2'singly //@Day57
32. Clone a linkedlist with next and random pointer //@Day58
33. Merge k sorted linkedlist
34. Multiply 2 no. represented by LL.
35. Delete nodes which have a greater value on right side  
36. Segregate even and odd nodes in a LL
37. Program for n'th node from the end of a LL
38. Find the first non-repeating character from a stream of characters
 
